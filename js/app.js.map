{"version":3,"file":"app.js","sources":["../../__babelHelpers__","controllers/base.js","views/user-login.jsx","controllers/users.js","views/reminders/reminder-item.jsx","views/reminders.jsx","controllers/reminders.js","lib/common/event-dispatcher.js","lib/wakeword/recogniser.js","lib/speech/recogniser.js","lib/intent-parser.js","lib/speech-controller.js","views/microphone.jsx","controllers/main.js","app.js"],"sourcesContent":["var babelHelpers = {};\nexport var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\nexport var jsx = function () {\n  var REACT_ELEMENT_TYPE = typeof Symbol === \"function\" && Symbol.for && Symbol.for(\"react.element\") || 0xeac7;\n  return function createRawReactElement(type, props, key, children) {\n    var defaultProps = type && type.defaultProps;\n    var childrenLength = arguments.length - 3;\n\n    if (!props && childrenLength !== 0) {\n      props = {};\n    }\n\n    if (props && defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === void 0) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    } else if (!props) {\n      props = defaultProps || {};\n    }\n\n    if (childrenLength === 1) {\n      props.children = children;\n    } else if (childrenLength > 1) {\n      var childArray = Array(childrenLength);\n\n      for (var i = 0; i < childrenLength; i++) {\n        childArray[i] = arguments[i + 3];\n      }\n\n      props.children = childArray;\n    }\n\n    return {\n      $$typeof: REACT_ELEMENT_TYPE,\n      type: type,\n      key: key === undefined ? null : '' + key,\n      ref: null,\n      props: props,\n      _owner: null\n    };\n  };\n}();\n\nexport var asyncToGenerator = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            return step(\"next\", value);\n          }, function (err) {\n            return step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\nexport var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nexport var createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexport var defineEnumerableProperties = function (obj, descs) {\n  for (var key in descs) {\n    var desc = descs[key];\n    desc.configurable = desc.enumerable = true;\n    if (\"value\" in desc) desc.writable = true;\n    Object.defineProperty(obj, key, desc);\n  }\n\n  return obj;\n};\n\nexport var defaults = function (obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n};\n\nexport var defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nexport var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexport var get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nexport var inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nexport var _instanceof = function (left, right) {\n  if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n    return right[Symbol.hasInstance](left);\n  } else {\n    return left instanceof right;\n  }\n};\n\nexport var interopRequireDefault = function (obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n};\n\nexport var interopRequireWildcard = function (obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n};\n\nexport var newArrowCheck = function (innerThis, boundThis) {\n  if (innerThis !== boundThis) {\n    throw new TypeError(\"Cannot instantiate an arrow function\");\n  }\n};\n\nexport var objectDestructuringEmpty = function (obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n};\n\nexport var objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nexport var possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nexport var selfGlobal = typeof global === \"undefined\" ? self : global;\n\nexport var set = function set(object, property, value, receiver) {\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent !== null) {\n      set(parent, property, value, receiver);\n    }\n  } else if (\"value\" in desc && desc.writable) {\n    desc.value = value;\n  } else {\n    var setter = desc.set;\n\n    if (setter !== undefined) {\n      setter.call(receiver, value);\n    }\n  }\n\n  return value;\n};\n\nexport var slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexport var slicedToArrayLoose = function (arr, i) {\n  if (Array.isArray(arr)) {\n    return arr;\n  } else if (Symbol.iterator in Object(arr)) {\n    var _arr = [];\n\n    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n      _arr.push(_step.value);\n\n      if (i && _arr.length === i) break;\n    }\n\n    return _arr;\n  } else {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n};\n\nexport var taggedTemplateLiteral = function (strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n};\n\nexport var taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\nexport var temporalRef = function (val, name, undef) {\n  if (val === undef) {\n    throw new ReferenceError(name + \" is not defined - temporal dead zone\");\n  } else {\n    return val;\n  }\n};\n\nexport var temporalUndefined = {};\n\nexport var toArray = function (arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n};\n\nexport var toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nbabelHelpers;\n\nexport { _typeof as typeof, _extends as extends, _instanceof as instanceof }","export default class BaseController {\n  constructor(properties) {\n    Object.assign(this, properties || {});\n  }\n\n  main() {\n    throw new Error('Not implemented!');\n  }\n}\n","import React from 'components/react';\n\nexport default class UserLogin extends React.Component {\n  render() {\n    return (\n      <form className=\"user-login\">\n        <input placeholder=\"Family name\" className=\"user-login__name-field\"/>\n        <button className=\"user-login__login-button\">\n          <img src=\"css/icons/next.svg\"/>\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'components/react';\nimport ReactDOM from 'components/react-dom';\n\nimport BaseController from './base';\nimport UserLogin from '../views/user-login';\n\nconst ALLOWED_ACTIONS = ['login', 'logout'];\nconst DEFAULT_ACTION = ALLOWED_ACTIONS[0];\n\nexport default class UsersController extends BaseController {\n  main(action = DEFAULT_ACTION) {\n    if (!ALLOWED_ACTIONS.includes(action)) {\n      console.error(\n        `Bad users route: \"${action}\". Falling back to ${DEFAULT_ACTION}.`\n      );\n      action = DEFAULT_ACTION;\n    }\n\n    switch (action) {\n      case 'login':\n        this.login();\n        break;\n\n      case 'logout':\n        this.logout();\n        break;\n    }\n  }\n\n  login() {\n    ReactDOM.render(\n      React.createElement(UserLogin, {}), this.mountNode\n    );\n  }\n\n  logout() {\n    // Once logged out, we redirect to the login page.\n    location.hash = '#users/login';\n  }\n}\n","import React from 'components/react';\nimport moment from 'components/moment';\n\nconst COLOURS = ['red', 'orange', 'green', 'blue', 'violet'];\n\nexport default class ReminderItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.reminder = props.reminder;\n  }\n\n  getColour(name = '') {\n    const hash = (string) => {\n      let hash = 0, i, chr, len;\n      if (string.length === 0) {\n        return 0;\n      }\n      for (i = 0, len = string.length; i < len; i++) {\n        chr = string.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n      }\n      return hash;\n    };\n\n    return COLOURS[hash(name) % COLOURS.length];\n  }\n\n  render() {\n    const reminder = this.reminder;\n    const contentClassName = [\n      'reminders__item-content',\n      this.getColour(reminder.recipient.join(' ')),\n    ]\n      .join(' and ');\n\n    return (\n      <li className=\"reminders__item\">\n        <div className=\"reminders__item-time\">\n          <div>{moment(reminder.datetime).format('LT')}</div>\n        </div>\n        <div className={contentClassName}>\n          <h3 className=\"reminders__item-recipient\">\n            {reminder.recipient}\n          </h3>\n          <p className=\"reminders__item-text\">\n            {reminder.content}\n          </p>\n        </div>\n      </li>\n    );\n  }\n}\n\nReminderItem.propTypes = {\n  reminder: React.PropTypes.object.isRequired,\n};\n","import React from 'components/react';\nimport _ from 'components/lodash';\nimport moment from 'components/moment';\n\nimport ReminderItem from './reminders/reminder-item';\n\nexport default class Reminders extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.speechController = props.speechController;\n\n    moment.locale(navigator.languages || navigator.language || 'en-US');\n\n    let k = 0;\n\n    const reminders = [\n      {\n        id: k++,\n        recipient: ['Guillaume'],\n        content: 'Get a haircut',\n        datetime: Date.now() + 1 * 60 * 60 * 1000,\n      },\n      {\n        id: k++,\n        recipient: ['Guillaume'],\n        content: 'File a bug',\n        datetime: Date.now() + 2.5 * 60 * 60 * 1000,\n      },\n      {\n        id: k++,\n        recipient: ['Julien'],\n        content: 'Do the laundry',\n        datetime: Date.now() + 1 * 60 * 60 * 24 * 1000,\n      },\n      {\n        id: k++,\n        recipient: ['Sam'],\n        content: 'Attend ping pong competition',\n        datetime: Date.now() + 10.5 * 60 * 60 * 24 * 1000,\n      },\n      {\n        id: k++,\n        recipient: ['Guillaume'],\n        content: 'Attend Swan Lake by the Bolshoi Ballet',\n        datetime: Date.now() + 45 * 60 * 60 * 24 * 1000,\n      },\n    ];\n\n    this.state = { reminders };\n\n    this.speechController.on('wakelistenstart', () => {\n      console.log('wakelistenstart');\n    });\n    this.speechController.on('wakelistenstop', () => {\n      console.log('wakelistenstop');\n    });\n    this.speechController.on('wakeheard', () => {\n      console.log('wakeheard');\n    });\n    this.speechController.on('speechrecognitionstart', () => {\n      console.log('speechrecognitionstart');\n    });\n    this.speechController.on('speechrecognitionstop', () => {\n      console.log('speechrecognitionstop');\n    });\n    this.speechController.on('reminder', (reminder) => {\n      console.log('reminder', reminder);\n      const reminders = this.state.reminders;\n      reminders.push({\n        id: reminders.length,\n        recipient: reminder.users,\n        content: reminder.action,\n        datetime: reminder.time,\n      });\n\n      this.setState(reminders);\n    });\n  }\n\n  render() {\n    let reminders = this.state.reminders;\n\n    // Sort all the reminders chronologically.\n    reminders = reminders.sort((a, b) => {\n      return a.datetime - b.datetime;\n    });\n\n    // Group the reminders by month.\n    reminders = _.groupBy(reminders, (reminder) => {\n      return moment(reminder.datetime).format('YYYY/MM');\n    });\n\n    // For each month, group the reminders by day.\n    Object.keys(reminders).forEach((month) => {\n      reminders[month] = _.groupBy(reminders[month], (reminder) => {\n        return moment(reminder.datetime).format('YYYY/MM/DD');\n      });\n    });\n\n    const reminderNodes = Object.keys(reminders).map((key) => {\n      const month = moment(key, 'YYYY/MM').format('MMMM');\n      const reminderMonth = reminders[key];\n\n      return (\n        <div key={key}>\n          <h2 className=\"reminders__month\">{month}</h2>\n          {Object.keys(reminderMonth).map((key) => {\n            const date = moment(key, 'YYYY/MM/DD');\n            const remindersDay = reminderMonth[key];\n\n            return (\n              <div key={key} className=\"reminders__day\">\n                <div className=\"reminders__day-date\">\n                  <div className=\"reminders__day-mday\">\n                    {date.format('DD')}\n                  </div>\n                  <div className=\"reminders__day-wday\">\n                    {date.format('ddd')}\n                  </div>\n                </div>\n                <ol className=\"reminders__list\">\n                  {remindersDay.map((reminder) => {\n                    return (<ReminderItem key={reminder.id}\n                                          reminder={reminder}\n                    />);\n                  })}\n                </ol>\n              </div>\n            );\n          })}\n        </div>\n      );\n    });\n\n    return (\n      <section className=\"reminders\">\n        {reminderNodes}\n      </section>\n    );\n  }\n}\n\nReminders.propTypes = {\n  speechController: React.PropTypes.object.isRequired,\n};\n","import React from 'components/react';\nimport ReactDOM from 'components/react-dom';\n\nimport BaseController from './base';\nimport Reminders from '../views/reminders';\n\nexport default class RemindersController extends BaseController {\n  main() {\n    ReactDOM.render(\n      React.createElement(Reminders, {\n        speechController: this.speechController,\n      }), this.mountNode\n    );\n  }\n}\n","'use strict';\n\n/*\n * This file provides an helper to add custom events to any object.\n *\n * In order to use this functionality with any object consumer should extend\n * target object class with EventDispatcher:\n *\n * class Obj extends EventDispatcher {}\n * const obj = new Obj();\n *\n * A list of events can be optionally provided and it is recommended to do so.\n * If a list is provided then only the events present in the list will be\n * allowed. Using events not present in the list will cause other functions to\n * throw an error:\n *\n * class Obj extends EventDispatcher {\n *   constructor() {\n *     super(['somethinghappened', 'somethingelsehappened']);\n *   }\n * }\n * const obj = new Obj();\n *\n * The object will have five new methods: 'on', 'once', 'off', 'offAll' and\n * 'emit'. Use 'on' to register a new event-handler:\n *\n * obj.on(\"somethinghappened\", function onSomethingHappened() { ... });\n *\n * If the same event-handler is added multiple times then only one will be\n * registered, e.g.:\n *\n * function onSomethingHappened() { ... }\n * obj.on(\"somethinghappened\", onSomethingHappened);\n * obj.on(\"somethinghappened\", onSomethingHappened); // Does nothing\n *\n * Use 'off' to remove a registered listener:\n *\n * obj.off(\"somethinghappened\", onSomethingHappened);\n *\n * Use 'once' to register a one-time event-handler: it will be automatically\n * unregistered after being called.\n *\n * obj.once(\"somethinghappened\", function onSomethingHappened() { ... });\n *\n * And use 'offAll' to remove all registered event listeners for the specified\n * event:\n *\n * obj.offAll(\"somethinghappened\");\n *\n * When used without parameters 'offAll' removes all registered event handlers,\n * this can be useful when writing unit-tests.\n *\n * Finally use 'emit' to send an event to the registered handlers:\n *\n * obj.emit(\"somethinghappened\");\n *\n * An optional parameter can be passed to 'emit' to be passed to the registered\n * handlers:\n *\n * obj.emit(\"somethinghappened\", 123);\n */\n\nconst assertValidEventName = function(eventName) {\n  if (!eventName || typeof eventName !== 'string') {\n    throw new Error('Event name should be a valid non-empty string!');\n  }\n};\n\nconst assertValidHandler = function(handler) {\n  if (typeof handler !== 'function') {\n    throw new Error('Handler should be a function!');\n  }\n};\n\nconst assertAllowedEventName = function(allowedEvents, eventName) {\n  if (allowedEvents && allowedEvents.indexOf(eventName) < 0) {\n    throw new Error(`Event \"${eventName}\" is not allowed!`);\n  }\n};\n\nconst p = Object.freeze({\n  allowedEvents: Symbol('allowedEvents'),\n  listeners: Symbol('listeners'),\n});\n\nexport default class EventDispatcher {\n  constructor(allowedEvents) {\n    if (typeof allowedEvents !== 'undefined' && !Array.isArray(allowedEvents)) {\n      throw new Error('Allowed events should be a valid array of strings!');\n    }\n\n    this[p.listeners] = new Map();\n    this[p.allowedEvents] = allowedEvents;\n  }\n\n  /**\n   * Registers listener function to be executed once event occurs.\n   *\n   * @param {string} eventName Name of the event to listen for.\n   * @param {function} handler Handler to be executed once event occurs.\n   */\n  on(eventName, handler) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n    assertValidHandler(handler);\n\n    let handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      handlers = new Set();\n      this[p.listeners].set(eventName, handlers);\n    }\n\n    // Set.add ignores handler if it has been already registered.\n    handlers.add(handler);\n  }\n\n  /**\n   * Registers listener function to be executed only first time when event\n   * occurs.\n   *\n   * @param {string} eventName Name of the event to listen for.\n   * @param {function} handler Handler to be executed once event occurs.\n   */\n  once(eventName, handler) {\n    assertValidHandler(handler);\n\n    const once = (parameters) => {\n      this.off(eventName, once);\n\n      handler.call(this, parameters);\n    };\n\n    this.on(eventName, once);\n  }\n\n  /**\n   * Removes registered listener for the specified event.\n   *\n   * @param {string} eventName Name of the event to remove listener for.\n   * @param {function} handler Handler to remove, so it won't be executed\n   * next time event occurs.\n   */\n  off(eventName, handler) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n    assertValidHandler(handler);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.delete(handler);\n\n    if (!handlers.size) {\n      this[p.listeners].delete(eventName);\n    }\n  }\n\n  /**\n   * Removes all registered listeners for the specified event.\n   *\n   * @param {string=} eventName Name of the event to remove all listeners for.\n   */\n  offAll(eventName) {\n    if (typeof eventName === 'undefined') {\n      this[p.listeners].clear();\n      return;\n    }\n\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.clear();\n\n    this[p.listeners].delete(eventName);\n  }\n\n  /**\n   * Emits specified event so that all registered handlers will be called\n   * with the specified parameters.\n   *\n   * @param {string} eventName Name of the event to call handlers for.\n   * @param {Object=} parameters Optional parameters that will be passed to\n   * every registered handler.\n   */\n  emit(eventName, parameters) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.forEach((handler) => {\n      try {\n        handler.call(this, parameters);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  }\n\n  /**\n   * Checks if there are any listeners that listen for the specified event.\n   *\n   * @param {string} eventName Name of the event to check listeners for.\n   * @returns {boolean}\n   */\n  hasListeners(eventName) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    return this[p.listeners].has(eventName);\n  }\n}\n","'use strict';\n\nimport JsSpeechRecognizer from 'components/jsspeechrecognizer';\n\nexport default class WakeWordRecogniser {\n  constructor(options = {}) {\n    const minimumConfidence = options.minimumConfidence || 0.35;\n    const bufferCount = options.bufferCount || 80;\n    const maxVoiceActivityGap = options.maxVoiceActivityGap || 300;\n    const numGroups = options.numGroups || 60;\n    const groupSize = options.groupSize || 5;\n\n    this.recogniser = new JsSpeechRecognizer();\n\n    this.recogniser.keywordSpottingMinimumConfidence = minimumConfidence;\n    this.recogniser.keywordSpottingBufferCount = bufferCount;\n    this.recogniser.keywordSpottingMaxVoiceActivityGap = maxVoiceActivityGap;\n    this.recogniser.numGroups = numGroups;\n    this.recogniser.groupSize = groupSize;\n\n    Object.seal(this);\n  }\n\n  startListening() {\n    return new Promise((resolve) => {\n      this.recogniser.openMic();\n      if (!this.recogniser.isRecording()) {\n        this.recogniser.startKeywordSpottingRecording();\n      }\n\n      resolve();\n    });\n  }\n\n  stopListening() {\n    return new Promise((resolve) => {\n      if (this.recogniser.isRecording()) {\n        this.recogniser.stopRecording();\n      }\n\n      resolve();\n    });\n  }\n\n  loadModel(modelData) {\n    if (this.recogniser.isRecording()) {\n      throw new Error(\n        'Load the model data before listening for wakeword');\n    }\n\n    this.recogniser.model = modelData;\n  }\n\n  setOnKeywordSpottedCallback(fn) {\n    this.recogniser.keywordSpottedCallback = fn;\n  }\n}\n","'use strict';\n\nconst p = Object.freeze({\n  isListening: Symbol('isListening'),\n  recognition: Symbol('recognition'),\n  supportsRecognition: Symbol('supportsRecognition'),\n});\n\nexport default class SpeechRecogniser {\n  constructor() {\n    this[p.isListening] = false;\n\n    const Recognition =\n      window.SpeechRecognition || window.webkitSpeechRecognition;\n\n    const supportsRecognition = !!Recognition;\n\n    this[p.supportsRecognition] = supportsRecognition;\n\n    if (supportsRecognition) {\n      this[p.recognition] = new Recognition();\n    } else {\n      this[p.recognition] = null;\n    }\n\n    Object.seal(this);\n  }\n\n  listenForUtterance() {\n    if (!this[p.supportsRecognition]) {\n      return Promise.reject(\n        new Error('Speech recognition not supported in this browser'));\n    }\n\n    return new Promise((resolve, reject) => {\n      if (this[p.isListening]) {\n        return reject(new Error('Speech recognition is already listening'));\n      }\n\n      this[p.isListening] = true;\n\n      // Not using `addEventListener` here to avoid\n      // `removeEventListener` everytime it's simpler\n      // to just redefine `onresult` to the same effect.\n      this[p.recognition].onresult = (event) => {\n        this[p.recognition].stop();\n        this[p.isListening] = false;\n\n        // Always take first result\n        const result = event.results[0][0];\n\n        return resolve({\n          confidence: result.confidence,\n          utterance: result.transcript,\n        });\n      };\n\n      this[p.recognition].onerror = (error) => {\n        this[p.recognition].stop();\n        this[p.isListening] = false;\n        return reject(error);\n      };\n\n      this[p.recognition].start();\n    });\n  }\n\n  abort() {\n    this[p.recognition].abort();\n    this[p.isListening] = false;\n\n    return Promise.resolve();\n  }\n}\n","'use strict';\n\nimport chrono from 'components/chrono';\n\n/*\nExamples of supported phrases:\nRemind me to pick Sasha from Santa Clara University at 5PM today.\nRemind me that it is picnic day on July 4th.\nRemind us to go to the opera at 7:15pm on 2nd February.\nRemind us to go at my mum's at 11:30am on 31st July.\nRemind everybody to pack their stuff by next Friday 5pm.\nRemind me that every Tuesday night is trash day.\n\nTo add:\nRemind me every Tuesday to take the bin out.\nRemind Guillaume on Thursdays evening to go to his drawing class.\nRemind me that I should prepare my appointment tomorrow morning.\n*/\n\nconst p = Object.freeze({\n  // Properties\n  regexps: Symbol('regexps'),\n\n  // Methods\n  parseUsers: Symbol('parseUsers'),\n  parseAction: Symbol('parseAction'),\n  parseDatetime: Symbol('parseDatetime'),\n  normalise: Symbol('normalise'),\n  init: Symbol('init'),\n  buildRegExp: Symbol('buildRegExp'),\n  splitOnPlaceholders: Symbol('splitOnPlaceholders'),\n  escape: Symbol('escape'),\n});\n\nconst PATTERNS = {\n  en: {\n    patterns: [\n      `Remind [user] to [action] at [time].`,\n      `Remind [user] to [action] on [time].`,\n      `Remind [user] to [action] by [time].`,\n      `Remind [user] at [time] to [action].`,\n      `Remind [user] on [time] to [action].`,\n      `Remind [user] by [time] to [action].`,\n      `Remind [user] that it is [action] on [time].`,\n      `Remind [user] that [time] is [action].`,\n    ],\n    placeholders: {\n      user: '( \\\\S+ | \\\\S+,? and \\\\S+ )',\n      action: '(.+)',\n      time: '(.+)',\n    },\n    // @see http://www.unicode.org/cldr/charts/29/summary/en.html#4\n    punctuation: new RegExp(\n      `[-‐–—,;:!?.…'‘’\"“”()\\\\[\\\\]§@*/&#†‡′″]+$`, 'u'),\n  },\n  fr: {\n    patterns: [\n      `Rappelle [user] de [action] [time].`,\n      `Rappelle [user] d'[action] [time].`,\n      `Rappelle-[user] de [action] [time].`,\n      `Rappelle-[user] d'[action] [time].`,\n    ],\n    placeholders: {\n      user: '( \\\\S+ | \\\\S+ et \\\\S+ )',\n      action: '(.+)',\n      time: '(.+)',\n    },\n    punctuation: new RegExp(\n      `[-‐–—,;:!?.…’\"“”«»()\\\\[\\\\]§@*/&#†‡]+$`, 'u'),\n  },\n  ja: {\n    patterns: [\n      `[time][action]を[user]に思い出させて。`,\n      `[time][user]に[action]を思い出させて。`,\n      `[time][user]は[action]と言うリマインダーを作成して。`,\n    ],\n    placeholders: {\n      user: '(\\\\S+|\\\\S+と\\\\S+)',\n      action: '(.+)',\n      time: '(.+)',\n    },\n    punctuation: new RegExp(\n      `[-‾_＿－‐—―〜・･,，、､;；:：!！?？.．‥…。｡＇‘’\"＂“”(（)）\\\\[［\\\\]］{｛}｝` +\n      `〈〉《》「｢」｣『』【】〔〕‖§¶@＠*＊/／\\＼&＆#＃%％‰†‡′″〃※]+$`, 'u'),\n  },\n};\n\nexport default class IntentParser {\n  constructor(locale = 'en') {\n    this.locale = locale;\n    this[p.regexps] = {};\n    this[p.init]();\n\n    Object.seal(this);\n  }\n\n  parse(phrase = '') {\n    if (!phrase) {\n      return Promise.reject('Empty string.');\n    }\n\n    return new Promise((resolve, reject) => {\n      const successful = this[p.regexps][this.locale].some((pattern) => {\n        if (!pattern.patterns.test(phrase)) {\n          return false;\n        }\n\n        const segments = pattern.patterns.exec(phrase);\n        segments.shift();\n\n        const users = this[p.parseUsers](segments[pattern.placeholders.user]);\n        const action =\n          this[p.parseAction](segments[pattern.placeholders.action]);\n        const time = this[p.parseDatetime](segments[pattern.placeholders.time]);\n\n        if (time === null) {\n          reject('Time could not be parsed.');\n          return false; // Try next patterns.\n        }\n\n        resolve({ users, action, time });\n        return true;\n      });\n\n      if (!successful) {\n        return reject('Unsupported intent format.');\n      }\n    });\n  }\n\n  [p.parseUsers](string = '') {\n    return [string.trim()];\n  }\n\n  [p.parseAction](string = '') {\n    return string.trim();\n  }\n\n  [p.parseDatetime](string = '') {\n    string = string.trim();\n    const datetime = chrono.parseDate(string);\n\n    return datetime;\n  }\n\n  [p.normalise](string = '', locale = this.locale) {\n    // Normalise whitespaces to space.\n    return string\n      .replace(/\\s+/g, ' ')\n      .trim()\n      // Strip punctuations.\n      .replace(PATTERNS[locale].punctuation, '');\n  }\n\n  /**\n   * Build the `regexps` property as an object mapping locale code to list of\n   * patterns and placeholders pairs.\n   */\n  [p.init]() {\n    Object.keys(PATTERNS).forEach((locale) => {\n      this[p.regexps][locale] = PATTERNS[locale].patterns.map((phrase) =>\n        this[p.buildRegExp](locale, phrase, PATTERNS[locale].placeholders));\n    });\n\n    console.log(this[p.regexps]);\n  }\n\n  [p.buildRegExp](locale = 'en', phrase = '', placeholders) {\n    phrase = this[p.normalise](phrase, locale);\n\n    const tokens = this[p.splitOnPlaceholders](phrase);\n    const order = {};\n    let placeholderIndex = 0;\n    let patterns = tokens.map((token) => {\n      if (token.startsWith('[')) {\n        const placeholder = token\n          .substr(1)\n          // Strip trailing `]`.\n          .replace(new RegExp('\\\\]$', 'u'), '');\n\n        // The order of the placeholders can be different depending on the\n        // pattern or language. When we parse a string, we need to match the\n        // regexp captured masks to the placeholder given its position.\n        order[placeholder] = placeholderIndex;\n        placeholderIndex++;\n\n        return placeholders[placeholder];\n      }\n\n      if (token === ' ') {\n        return '\\\\b \\\\b';\n      }\n\n      // Leading and trailing spaces are changed to word boundary.\n      return this[p.escape](token)\n        .replace(new RegExp('^ ', 'u'), '\\\\b')\n        .replace(new RegExp(' $', 'u'), '\\\\b');\n    });\n\n    patterns = new RegExp(`^${patterns.join('')}$`, 'iu');\n\n    return { patterns, placeholders: order };\n  }\n\n  /**\n   * Split the input phrase along the placeholders noted into brackets.\n   * e.g. 'Meet [user] on [time].' => ['Meet ', '[user]', ' on ', '[time]', '.']\n   *\n   * @param {string} phrase\n   * @return {Array.<string>}\n   */\n  [p.splitOnPlaceholders](phrase) {\n    const tokens = [''];\n    let index = 0;\n\n    phrase.split('').forEach((c) => {\n      if (c === '[' && tokens[index] !== '') {\n        index++;\n        tokens[index] = '';\n      }\n\n      tokens[index] += c;\n\n      if (c === ']') {\n        index++;\n        tokens[index] = '';\n      }\n    });\n\n    return tokens;\n  }\n\n  /**\n   * Escape characters to be used inside a RegExp as static patterns.\n   *\n   * @param {string} string\n   * @return {string}\n   */\n  [p.escape](string) {\n    return string\n      .replace(new RegExp('\\\\.', 'gu'), '\\\\.')\n      .replace(new RegExp('\\\\/', 'gu'), '\\\\/')\n      .replace(new RegExp('\\\\(', 'gu'), '\\\\(')\n      .replace(new RegExp('\\\\)', 'gu'), '\\\\)');\n  }\n}\n","'use strict';\n\nimport EventDispatcher from './common/event-dispatcher';\nimport WakeWordRecogniser from './wakeword/recogniser';\nimport SpeechRecogniser from './speech/recogniser';\nimport IntentParser from './intent-parser';\n\nconst p = Object.freeze({\n  // Properties\n  wakewordRecogniser: Symbol('wakewordRecogniser'),\n  wakewordModelUrl: Symbol('wakewordModelUrl'),\n  speechRecogniser: Symbol('speechRecogniser'),\n\n  // Methods\n  initialiseSpeechRecognition: Symbol('initialiseSpeechRecognition'),\n  startListeningForWakeword: Symbol('startListeningForWakeword'),\n  stopListeningForWakeword: Symbol('stopListeningForWakeword'),\n  listenForUtterance: Symbol('listenForUtterance'),\n  handleSpeechRecognitionEnd: Symbol('handleSpeechRecognitionEnd'),\n  intentParser: Symbol('intentParser'),\n});\n\nconst EVENT_INTERFACE = [\n  // Emit when the wakeword is being listened for\n  'wakelistenstart',\n\n  // Emit when the wakeword is no longer being listened for\n  'wakelistenstop',\n\n  // Emit when the wakeword is heard\n  'wakeheard',\n\n  // Emit when the speech recognition engine starts listening\n  // (And _could_ be sending speech over the network)\n  'speechrecognitionstart',\n\n  // Emit when the speech recognition engine returns a recognised phrase\n  'speechrecognitionstop',\n\n  // Emit when an intent is successfully parsed and we have a reminder object.\n  'reminder',\n];\n\nexport default class SpeechController extends EventDispatcher {\n  constructor() {\n    super(EVENT_INTERFACE);\n\n    const wakeWordRecogniser = new WakeWordRecogniser();\n    const speechRecogniser = new SpeechRecogniser();\n    this[p.intentParser] = new IntentParser();\n\n    wakeWordRecogniser.setOnKeywordSpottedCallback(() => {\n      this.emit(EVENT_INTERFACE[2]);\n\n      this.startSpeechRecognition();\n    });\n\n    this[p.wakewordRecogniser] = wakeWordRecogniser;\n    this[p.wakewordModelUrl] = '/data/wakeword_model.json';\n\n    this[p.speechRecogniser] = speechRecogniser;\n\n    Object.seal(this);\n  }\n\n  start() {\n    return this[p.initialiseSpeechRecognition]()\n      .then(this[p.startListeningForWakeword].bind(this));\n  }\n\n  startSpeechRecognition() {\n    return this[p.stopListeningForWakeword]()\n      .then(this[p.listenForUtterance].bind(this))\n      .then(this[p.handleSpeechRecognitionEnd].bind(this))\n      .then(this[p.startListeningForWakeword].bind(this))\n      .catch(this[p.startListeningForWakeword].bind(this));\n  }\n\n  stopSpeechRecognition() {\n    return this[p.speechRecogniser].abort()\n      .then(this[p.startListeningForWakeword].bind(this));\n  }\n\n  [p.initialiseSpeechRecognition]() {\n    return fetch(this[p.wakewordModelUrl])\n      .then((response) => response.json())\n      .then((model) => {\n        this[p.wakewordRecogniser].loadModel(model);\n      });\n  }\n\n  [p.startListeningForWakeword]() {\n    this.emit(EVENT_INTERFACE[0]);\n    return this[p.wakewordRecogniser].startListening();\n  }\n\n  [p.stopListeningForWakeword]() {\n    this.emit(EVENT_INTERFACE[1]);\n    return this[p.wakewordRecogniser].stopListening();\n  }\n\n  [p.listenForUtterance]() {\n    this.emit(EVENT_INTERFACE[3]);\n    return this[p.speechRecogniser].listenForUtterance();\n  }\n\n  [p.handleSpeechRecognitionEnd](result) {\n    this.emit(EVENT_INTERFACE[4], result);\n\n    // Parse intent\n    this[p.intentParser].parse(result.utterance)\n      .then((reminder) => {\n        this.emit(EVENT_INTERFACE[5], reminder);\n      });\n  }\n}\n","import React from 'components/react';\n\nexport default class Microphone extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isListening: false,\n    };\n\n    this.speechController = props.speechController;\n    this.bleep = new Audio();\n\n    this.bleep.src = '../media/cue.wav';\n\n    this.speechController.on('wakeheard', () => {\n      this.bleep.pause();\n      this.bleep.currentTime = 0;\n      this.bleep.play();\n      this.setState({ isListening: true });\n    });\n    this.speechController.on('speechrecognitionstop', () => {\n      this.setState({ isListening: false });\n    });\n\n    this.click = this.click.bind(this);\n  }\n\n  click() {\n    if (!this.state.isListening) {\n      this.bleep.pause();\n      this.bleep.currentTime = 0;\n      this.bleep.play();\n      this.setState({ isListening: true });\n      this.speechController.startSpeechRecognition();\n      return;\n    }\n\n    this.setState({ isListening: false });\n    this.speechController.stopSpeechRecognition();\n  }\n\n  render() {\n    const className = this.state.isListening ? 'listening' : '';\n\n    return (\n      <div className={className} onClick={this.click}>\n        <div className=\"microphone__background\"></div>\n        <img className=\"microphone__icon\" src=\"../css/icons/microphone.svg\"/>\n      </div>\n    );\n  }\n}\n\nMicrophone.propTypes = {\n  speechController: React.PropTypes.object.isRequired,\n};\n","import BaseController from './base';\nimport UsersController from './users';\nimport RemindersController from './reminders';\nimport SpeechController from '../lib/speech-controller';\n\nimport React from 'components/react';\nimport ReactDOM from 'components/react-dom';\nimport Microphone from '../views/microphone';\n\nconst p = Object.freeze({\n  controllers: Symbol('controllers'),\n  onHashChanged: Symbol('onHashChanged'),\n  speechController: Symbol('speechController'),\n});\n\nexport default class MainController extends BaseController {\n  constructor() {\n    super();\n\n    const mountNode = document.querySelector('.app-view-container');\n    const speechController = new SpeechController();\n    const options = { mountNode, speechController };\n\n    const usersController = new UsersController(options);\n    const remindersController = new RemindersController(options);\n\n    this[p.controllers] = {\n      '': usersController,\n      'users/(.+)': usersController,\n      'reminders': remindersController,\n    };\n\n    this[p.speechController] = speechController;\n\n    window.addEventListener('hashchange', this[p.onHashChanged].bind(this));\n  }\n\n  main() {\n    if (screen && 'orientation' in screen && 'lock' in screen.orientation) {\n      screen.orientation.lock('landscape')\n        .catch((e) => {\n          console.error(e);\n        });\n    }\n\n    this[p.speechController].start()\n      .then(() => {\n        console.log('Speech controller started');\n      });\n\n    location.hash = '';\n    setTimeout(() => {\n      //location.hash = 'users/login';\n      location.hash = 'reminders';\n    }, 16);\n\n    ReactDOM.render(\n      React.createElement(Microphone, {\n        speechController: this[p.speechController],\n      }), document.querySelector('.microphone')\n    );\n  }\n\n  /**\n   * Handles hash change event and routes to the right controller.\n   *\n   * @private\n   */\n  [p.onHashChanged]() {\n    const route = window.location.hash.slice(1);\n\n    for (const routeName of Object.keys(this[p.controllers])) {\n      const match = route.match(new RegExp(`^${routeName}$`));\n      if (match) {\n        this[p.controllers][routeName].main(...match.slice(1));\n        break;\n      }\n    }\n  }\n}\n","import MainController from './controllers/main';\n\nconst mainController = new MainController();\nmainController.main();\n"],"names":["jsx","REACT_ELEMENT_TYPE","Symbol","type","props","key","children","defaultProps","childrenLength","arguments","length","propName","childArray","Array","i","$$typeof","undefined","ref","_owner","classCallCheck","instance","Constructor","TypeError","inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","possibleConstructorReturn","self","call","ReferenceError","toConsumableArray","arr","isArray","arr2","from","BaseController","properties","assign","this","main","Error","UserLogin","render","React","Component","ALLOWED_ACTIONS","DEFAULT_ACTION","UsersController","action","includes","error","login","logout","createElement","mountNode","hash","COLOURS","ReminderItem","_React$Component","reminder","getColour","name","string","chr","len","charCodeAt","contentClassName","recipient","join","moment","datetime","format","content","Reminders","speechController","locale","navigator","languages","language","k","reminders","Date","now","state","on","log","_this","push","users","time","setState","sort","a","b","_","groupBy","keys","forEach","month","reminderNodes","map","reminderMonth","date","remindersDay","id","RemindersController","assertValidEventName","eventName","assertValidHandler","handler","assertAllowedEventName","allowedEvents","indexOf","p","freeze","EventDispatcher","listeners","Map","handlers","get","Set","set","add","once","parameters","off","size","offAll","clear","emit","hasListeners","has","WakeWordRecogniser","options","minimumConfidence","bufferCount","maxVoiceActivityGap","numGroups","groupSize","recogniser","JsSpeechRecognizer","keywordSpottingMinimumConfidence","keywordSpottingBufferCount","keywordSpottingMaxVoiceActivityGap","seal","startListening","Promise","resolve","openMic","isRecording","startKeywordSpottingRecording","stopListening","_this2","stopRecording","loadModel","modelData","model","setOnKeywordSpottedCallback","fn","keywordSpottedCallback","SpeechRecogniser","isListening","Recognition","window","SpeechRecognition","webkitSpeechRecognition","supportsRecognition","recognition","listenForUtterance","reject","onresult","event","stop","result","results","confidence","transcript","onerror","start","abort","PATTERNS","RegExp","IntentParser","regexps","init","parse","phrase","successful","some","pattern","patterns","test","segments","exec","shift","parseUsers","placeholders","user","parseAction","parseDatetime","trim","chrono","parseDate","normalise","replace","punctuation","buildRegExp","tokens","splitOnPlaceholders","order","placeholderIndex","token","startsWith","placeholder","substr","_this3","escape","index","split","c","EVENT_INTERFACE","SpeechController","_EventDispatcher","wakeWordRecogniser","speechRecogniser","intentParser","startSpeechRecognition","wakewordRecogniser","wakewordModelUrl","initialiseSpeechRecognition","then","startListeningForWakeword","bind","stopListeningForWakeword","handleSpeechRecognitionEnd","stopSpeechRecognition","fetch","response","json","utterance","Microphone","bleep","Audio","src","pause","currentTime","play","click","className","MainController","_BaseController","document","querySelector","usersController","remindersController","controllers","addEventListener","onHashChanged","screen","orientation","lock","e","route","location","slice","routeName","match","mainController"],"mappings":"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","sourceRoot":"/source/"}